# The Following Lines are generated by the gentity tool 
# based on the input given in the entitytypes.xml file



class Staff(db.Model):
	__tablename__ = 'staff'
	id = db.Column(db.Integer, primary_key=True)
	staff_name = db.Column(db.String(40))
	staff_id_no = db.Column(db.Integer)
	courses = db.relationship("Course", backref="staff")



user_course = db.Table("user_course",
	db.Column("course_id", db.Integer, db.ForeignKey("course.id")),
	db.Column("user_id", db.Integer, db.ForeignKey("user.id")))



schedule_course = db.Table("schedule_course",
	db.Column("course_id", db.Integer, db.ForeignKey("course.id")),
	db.Column("schedule_id", db.Integer, db.ForeignKey("schedule.id")))


class Course(db.Model):
	__tablename__ = 'course'
	id = db.Column(db.Integer, primary_key=True)
	course_name = db.Column(db.String(40))
	course_code = db.Column(db.String(40))
	latitude = db.Column(db.Integer)
	longitude = db.Column(db.Integer)
	staff_id = db.Column(db.Integer, db.ForeignKey('staff.id'))
	users = db.relationship("User", secondary=user_course, backref=db.backref("courses") )
	schedules = db.relationship("Schedule", secondary=schedule_course, backref=db.backref("courses") )


class User(db.Model):
	__tablename__ = 'user'
	id = db.Column(db.Integer, primary_key=True)
	ukey = db.Column(db.String(40))
	display_name = db.Column(db.String(40))
	pub_key = db.Column(db.String(40))
	sign_count = db.Column(db.Integer)
	username = db.Column(db.String(40))
	emailid = db.Column(db.String(40))
	rollno = db.Column(db.Integer)
	rp_id = db.Column(db.String(40))
	icon_url = db.Column(db.String(40))
	credential_id = db.Column(db.String(40))


class Location(db.Model):
	__tablename__ = 'location'
	id = db.Column(db.Integer, primary_key=True)
	latitude = db.Column(db.Integer)
	longitude = db.Column(db.Integer)
	attendance = db.relationship("Attendance", backref="location" ,uselist=False)


class Attendance(db.Model):
	__tablename__ = 'attendance'
	id = db.Column(db.Integer, primary_key=True)
	staff_id = db.Column(db.Integer)
	roll_no = db.Column(db.Integer)
	period = db.Column(db.Integer)
	is_present = db.Column(db.Boolean)
	is_fingerprint = db.Column(db.Boolean)
	logged_time = db.Column(db.DateTime)
	course_code = db.Column(db.String(40))
	location_id = db.Column(db.Integer, db.ForeignKey('location.id'), unique=True)
	feedbacks = db.relationship("Feedback", backref="attendance")


class Schedule(db.Model):
	__tablename__ = 'schedule'
	id = db.Column(db.Integer, primary_key=True)
	day = db.Column(db.Integer)
	period = db.Column(db.Integer)


class Feedback(db.Model):
	__tablename__ = 'feedback'
	id = db.Column(db.Integer, primary_key=True)
	rating = db.Column(db.Integer)
	comment = db.Column(db.String(40))
	attendance_id = db.Column(db.Integer, db.ForeignKey('attendance.id'))


